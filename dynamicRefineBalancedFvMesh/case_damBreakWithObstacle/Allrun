#!/bin/bash

WM_PROJECT_DIR=/opt/openfoam6
source $WM_PROJECT_DIR/etc/bashrc
echo "version: " && foamVersion

# Get number of processes
    # Read it from decomposeParDict
        #np=$(grep numberOfSubdomains system/decomposeParDict|grep -oE '[0-9]+')

    # User given argument (preferred option)
        N_USERGIVEN=$1

        if [[ -n "$N_USERGIVEN" ]]; then
            np=$N_USERGIVEN
        else
            echo "No argument passed (using 'single process' as default)."
            np=1
        fi

# Get case name
    caseName=`basename $PWD`

# Set dummy files for visualization

    # Using ParaView's native reader
        if [ ! -f $caseName.foam ]; then
            touch $caseName.foam
        fi

    # Using OpenFOAM's native reader
        if [ ! -f $caseName.OpenFOAM ]; then
            touch $caseName.OpenFOAM
        fi

cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

cp -r 0.orig 0 > /dev/null 2>&1
runApplication blockMesh
#runApplication setSet -batch createObstacle.setSet
#runApplication topoSet
#runApplication subsetMesh -overwrite c0 -patch walls
runApplication setFields

if [ "$np" -lt 2 ]; then # Single-process jobs
    runApplication `getApplication`

else # Jobs in parallel
    runApplication foamDictionary -entry numberOfSubdomains -set $np system/decomposeParDict
    mv log.foamDictionary log.foamDictionary.decomposeParDict
    runApplication decomposePar
    runApplication foamDictionary -entry numberOfSubdomains -set $np system/balanceParDict
    mv log.foamDictionary log.foamDictionary.balanceParDict
    runParallel -n $np `getApplication`
    runApplication reconstructParMesh
    runApplication reconstructPar
fi

#------------------------------------------------------------------------------
